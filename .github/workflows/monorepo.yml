on:
  push:

jobs:
  push-to-monorepo:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          # token: ${{ secrets.TOKEN }}

      - name: Push to monorepo
        env:
          JOSH_HOST: ${{ secrets.JOSH_HOST }}
          JOSH_AUTH: ${{ secrets.JOSH_AUTH }}
          DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
          MONOREPO: bjeanes/monorepo-test
          SUBPATH: ${{ github.event.repository.name }}
          IS_FORCED: ${{ github.event.forced }}
        run: |
          set -ex

          git config --local http."https://${JOSH_HOST}/".extraheader "AUTHORIZATION: basic ${JOSH_AUTH}"

          BRANCH_NAME="${GITHUB_REF#refs/heads/}"
          MONOREPO_URL=https://${JOSH_HOST}/${MONOREPO}.git
          SLICE_URL="${MONOREPO_URL}:/${SUBPATH}.git"

          echo "Listing origin:"
          git fetch origin
          git ls-remote origin

          echo "Listing monorepo:"
          git remote add monorepo "$MONOREPO_URL"
          git ls-remote monorepo

          echo "Listing slice:"
          git remote add slice "$SLICE_URL"
          git ls-remote slice

          # If there isn't a commit to checkout at the subpath of the monorepo we are pushing to,
          # then we want to instruct it to merge this tree into the monorepo with `-o merge`, but
          # we do not want to pass this option otherwise
          OPTIONS="$(git ls-remote slice | grep refs/heads/${DEFAULT_BRANCH} &>/dev/null || echo '-o merge')"

          # always push main branch
          git push $OPTIONS slice refs/remotes/origin/${DEFAULT_BRANCH}:${DEFAULT_BRANCH}
          
          if [ "$BRANCH_NAME" != "$DEFAULT_BRANCH" ]; then
            OPTIONS=""
            [[ $IS_FORCED == "true" ]] && OPTIONS="$OPTIONS -f -o force"

            if ! git ls-remote slice | grep "${GITHUB_REF}" &>/dev/null; then
              if git ls-remote monorepo | grep "${GITHUB_REF}" &>/dev/null; then
                  # Branch exists in monorepo but not in slice, so request this push to be merged
                  OPTIONS="$OPTIONS -o merge"
              else
                  # creating a new branch in the upstream monorepo
                  OPTIONS="$OPTIONS -o base=${DEFAULT_BRANCH}"
              fi
            fi
            
            git push slice HEAD:${BRANCH_NAME} ${OPTIONS}
          fi
